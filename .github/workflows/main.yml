name: Node.js CI

on:
  push:
     tags:
     -  v[0-9]+.[0-9]+.[0-9]+-RC
jobs:
  build_test:

    name: Build & Test App

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: setup node
      uses: actions/setup-node@master
      with:
          node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: |
          npm install
          npm ci
       
    -  name: Extract branch
       id: extract_branch 
       shell: bash
       run: |
           echo "##[set-output name=BRANCH_NAME;]$(echo ${GITHUB_HEAD_REF})"
           echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/tags/})"
           echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"      
     
    - name: Get branch name
      run: echo 'The branch name is' steps.extract_branch.outputs.$BRANCH_NAME
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME_BRANCH_NAME }}
        IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}-${{ steps.extract_branch.outputs.sha_short }}
      run: |
        echo " $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"    

    
